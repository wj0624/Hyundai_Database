-- 생성되어 있는 뷰 리스트 보기
SELECT *
FROM USER_VIEWS;

-- 뷰 보기
SELECT *
FROM VW_EMP20;

-- 뷰 삭제
DROP VIEW VW_EMP20;

-- ROWNUM(가상컬럼)은 SELECT 절에서 FIX
-- ORDER BY가 적용되어도 이전의 ROWNUM 가지고 있음 -> 순서가 섞임
SELECT ROWNUM, E.*
FROM EMP E
ORDER BY SAL DESC;

-- SAL만 DESC 정렬되고, ROWNUM은 순서대로 표시
SELECT ROWNUM, E.*
FROM (
        SELECT *
        FROM EMP
        ORDER BY SAL DESC
) E;

-- WITH문을 사용하여 표시
-- 상위 3명 표시
WITH E AS (
    SELECT * 
    FROM EMP
    ORDER BY SAL DESC)

SELECT ROWNUM, E.* 
FROM E
WHERE ROWNUM <= 3;

----------------------------------------------------------------------------
-- SEQUENCE

-- DEPT 테이블을 구조만 복제하여 DEPT_SEQUENCE 테이블을 생성
CREATE TABLE DEPT_SEQUENCE
AS SELECT * 
    FROM DEPT
    WHERE 1 = 2;

CREATE SEQUENCE SEQ_DEPT_SEQUENCE
INCREMENT BY 10
START WITH 10
MAXVALUE 90
MINVALUE 0
NOCYCLE
CACHE 2;

SELECT *
FROM USER_SEQUENCES;

INSERT INTO DEPT_SEQUENCE(DEPTNO, DNAME, LOC)
VALUES (SEQ_DEPT_SEQUENCE.NEXTVAL, 'DATABASE', 'SEOUL');

SELECT *
FROM DEPT_SEQUENCE;

ALTER SEQUENCE SEQ_DEPT_SEQUENCE
INCREMENT BY 3
MAXVALUE 99
CYCLE;

SELECT SEQ_DEPT_SEQUENCE.CURRVAL
FROM DUAL;

DROP SEQUENCE SEQ_DEPT_SEQUENCE;

CREATE SYNONYM E
FOR EMP;

SELECT * FROM E;

DROP SYNONYM E;

CREATE SYNONYM E
FOR DEPT;

SELECT * FROM E;

---------------------------------------------------------------------
/* p.357 - 358 */

-- Q1
-- 1) EMP 테이블과 같은 구조의 데이터를 저장하는 EMPIDX 테이블 생성
CREATE TABLE EMPIDX
AS SELECT *
    FROM EMP;
    
SELECT * FROM EMPIDX;

-- 2) 생성한 EMPIDX 테이블의 EMPNO열에 IDX_EMPIDX_EMPNO 인덱스 생
CREATE INDEX IDX_EMPIDX_EMPNO
ON EMPIDX(EMPNO);

-- 3) 마지막으로 인덱스가 잘 생성되었는지 적절한 데이터 사전 뷰를 통해 확인
SELECT *
FROM USER_INDEXES;

-- Q2
/* 1번에서 생성한 EMPIDX 테이블의 데이터 중 급여(SAL)가 1500 초과인 사원들만
    출력하는 EMPIDX_OVER15K 뷰 생성 */

CREATE VIEW EMPIDX_OVER15K
AS (SELECT EMPNO, ENAME, JOB, DEPTNO,
                SAL, NVL2(COMM, 'O', 'X') AS COMM
    FROM EMPIDX
    WHERE SAL > 1500);

SELECT * FROM EMPIDX_OVER15K;

-- Q3
--1) DEPT테이블과 같은 열과 행 구성을 가지는 DEPTSEQ 테이블 작성
CREATE TABLE DEPTSEQ
AS SELECT *
    FROM DEPT;

-- 2) 생성한 DEPTSEQ 테이블의 DEPTNO 열에 사용할 시퀀스를 특성에 맞게 생성
CREATE SEQUENCE SEQ_DEPTSEQ
INCREMENT BY 1
START WITH 1
MAXVALUE 99
MINVALUE 1
NOCYCLE
NOCACHE;

-- 3) 마지막으로 생성한 DEPTSEQ를 사용하여 세 개 부서를 차례대로 추가
INSERT INTO DEPTSEQ(DEPTNO, DNAME, LOC)
VALUES (SEQ_DEPTSEQ.NEXTVAL, 'DATABASE', 'SEOUL');

INSERT INTO DEPTSEQ(DEPTNO, DNAME, LOC)
VALUES (SEQ_DEPTSEQ.NEXTVAL, 'WEB', 'BUSAN');

INSERT INTO DEPTSEQ(DEPTNO, DNAME, LOC)
VALUES (SEQ_DEPTSEQ.NEXTVAL, 'MOBILE', 'ILSAN');

SELECT * FROM DEPTSEQ;

---------------------------------------------------------------------------------------
-- CONSTRAINTS

SELECT * FROM USER_CONSTRAINTS;

CREATE TABLE TABLE_NOTNULL (
    LOGIN_ID VARCHAR(20) NOT NULL,
    LOGIN_PWD VARCHAR(20) NOT NULL,
    TEL VARCHAR(20)
);

INSERT INTO TABLE_NOTNULL (LOGIN_ID)
VALUES ('TEST_ID_01');

CREATE TABLE TABLE_NOTNULL2 (
    LOGIN_ID VARCHAR(20) CONSTRAINT TBLNN2_LGNID_NN NOT NULL,
    LOGIN_PWD VARCHAR(20) CONSTRAINT TBLNN2_LGNPW_NN NOT NULL,
    TEL VARCHAR(20)
);

SELECT * FROM USER_CONSTRAINTS;

INSERT INTO TABLE_NOTNULL (LOGIN_ID, LOGIN_PWD)
VALUES ('TEST_ID_01', '1234');

SELECT * FROM TABLE_NOTNULL;

ALTER TABLE TABLE_NOTNULL
MODIFY (TEL NOT NULL);

UPDATE TABLE_NOTNULL
SET TEL = '010-1234-5678'
WHERE LOGIN_ID = 'TEST_ID_01';

SELECT * FROM USER_CONSTRAINTS;

ALTER TABLE TABLE_NOTNULL2
MODIFY (TEL CONSTRAINT TBLNN_TEL_NN NOT NULL);

ALTER TABLE TABLE_NOTNULL2
RENAME CONSTRAINT TBLNN_TEL_NN TO TBLNN2_TEL_NN;

ALTER TABLE TABLE_NOTNULL2
DROP CONSTRAINT TBLNN2_TEL_NN;

CREATE TABLE TABLE_UNIQUE (
    LOGIN_ID VARCHAR(20) UNIQUE,
    LOGIN_PWD VARCHAR(20) NOT NULL,
    TEL VARCHAR(20)
);

SELECT * FROM USER_CONSTRAINTS;

INSERT INTO TABLE_UNIQUE (LOGIN_ID, LOGIN_PWD)
VALUES ('TEST_ID_01', '1234');

SELECT * FROM TABLE_UNIQUE;

UPDATE TABLE_UNIQUE
SET TEL = '010-1234-5678'
WHERE LOGIN_ID = 'TEST_ID_01';

INSERT INTO TABLE_UNIQUE (LOGIN_ID, LOGIN_PWD, TEL)
VALUES ('TEST_ID_02', '1234', '010-1234-5678');

ALTER TABLE TABLE_UNIQUE
MODIFY (TEL UNIQUE);

UPDATE TABLE_UNIQUE
SET TEL = NULL;

-- PRIMARY KEY

CREATE TABLE TABLE_PK (
    LOGIN_ID VARCHAR(20) PRIMARY KEY,
    LOGIN_PWD VARCHAR(20) NOT NULL,
    TEL VARCHAR(20)
);

SELECT * FROM USER_CONSTRAINTS;

INSERT INTO TABLE_PK (LOGIN_ID, LOGIN_PWD)
VALUES ('TEST_ID_01', '1234');

SELECT * FROM USER_INDEXES;

-- FOREIGN KEY
INSERT INTO EMP(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES(9999, '홍길동', 'CLERK', '7788', TO_DATE('2017/04/30', 'YYYY/MM/DD'), 1200, NULL, 50);

CREATE TABLE DEPT_FK(
    DEPTNO NUMBER(2) CONSTRAINT DEPTFK_DEPTNO_PK PRIMARY KEY,
    DNAME VARCHAR2(10),
    LOC VARCHAR2(13)
);

CREATE TABLE EMP_FK(
    EMPNO NUMBER(4) CONSTRAINT EMPFK_EMPNO_PK PRIMARY KEY,
    ENAME VARCHAR2(10),
    JOB VARCHAR2(29),
    MGR NUMBER(4),
    HIREDATE DATE,
    SAL NUMBER(7, 2),
    COMM NUMBER(7, 2),
    DEPTNO NUMBER(2) CONSTRAINT EMPFK_DEPTNO_FK REFERENCES DEPT_FK(DEPTNO)
);

INSERT INTO EMP_FK(EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO)
VALUES(9999, '홍길동', 'CLERK', '7788', TO_DATE('2017/04/30', 'YYYY/MM/DD'), 1200, NULL, 10);

INSERT INTO DEPT_FK
VALUES(10, 'TEST_DNAME', 'TEST_LOC');

SELECT * FROM DEPT_FK;
SELECT * FROM EMP_FK;

COMMIT;

DELETE FROM DEPT_FK
WHERE DEPTNO = 10;

ALTER TABLE EMP_FK
DROP CONSTRAINT EMPFK_DEPTNO_FK;

ALTER TABLE EMP_FK
ADD CONSTRAINT EMPFK_DEPTNO_FK FOREIGN KEY(DEPTNO) REFERENCES DEPT_FK (DEPTNO) ON DELETE SET NULL;

-- CHECK, DEFAULT

CREATE TABLE TABLE_CHECK  (
    LOGIN_ID VARCHAR2(20) CONSTRAINT TBLCK_LOGINID_PK PRIMARY KEY,
    LOGIN_PWD VARCHAR(20) CONSTRAINT TBLCK_LOGINPW_CK CHECK (LENGTH(LOGIN_PWD) > 3),
    TEL VARCHAR(20) DEFAULT '000-111-2222'
);

SELECT * FROM USER_CONSTRAINTS
WHERE TABLE_NAME = 'TABLE_CHECK';

INSERT INTO TABLE_CHECK (LOGIN_ID, LOGIN_PWD)
VALUES ('TEST_ID_01', '1234');

SELECT * FROM TABLE_CHECK;

/* P394 */
-- Q1
-- 1)
CREATE TABLE DEPT_CONST (
    DEPTNO NUMBER(2) CONSTRAINT DEPTCONST_DEPTNO_PK PRIMARY KEY,
    DNAME VARCHAR(14) CONSTRAINT DEPTCONST_DNAME_UNQ UNIQUE,
    LOC VARCHAR(13) CONSTRAINT DEPTCONST_LOC_NN NOT NULL
);

DESC DEPT_CONST;


-- 2)
CREATE TABLE EMP_CONST (
    EMPNO NUMBER(4) CONSTRAINT EMPCONST_EMPNO_PK PRIMARY KEY,
    ENAME VARCHAR2(10) CONSTRAINT EMPCONST_ENAME_NN NOT NULL,
    JOB VARCHAR2(9),
    TEL VARCHAR2(20) CONSTRAINT EMPCONST_TEL_UNQ UNIQUE,
    HIREDATE DATE,
    SAL NUMBER(7, 2) CONSTRAINT EMPCONST_SAL_CHK CHECK(SAL BETWEEN 1000 AND 9999),
    COMM NUMBER(7, 2),
    DEPTNO NUMBER(2) CONSTRAINT EMPCONST_DEPTNO_FK REFERENCES DEPT_CONST(DEPTNO)
);

-- 3)
SELECT TABLE_NAME, CONSTRAINT_NAME, CONSTRAINT_TYPE
FROM USER_CONSTRAINTS
WHERE TABLE_NAME IN ('DEPT_CONST', 'EMP_CONST')
ORDER BY CONSTRAINT_NAME;

---------------------------------------------------------------------------------------
-- ROLL

CREATE TABLE TEMP(
    COL1 VARCHAR(20),
    COL2 VARCHAR(20)
);

SELECT * FROM TEMP; -- 권한 SCOTT이 가지고 있음

GRANT SELECT, INSERT ON TEMP
    TO ORCLSTUDY;
    
REVOKE SELECT, INSERT ON TEMP FROM ORCLSTUDY;

--------------------------------------------------------------------------------------
/* P.416 */
-- Q1) LECT_SYSTEM.SQL 참조

-- Q2)
GRANT SELECT ON EMP
TO PREV_HW;

GRANT SELECT ON DEPT
TO PREV_HW;

GRANT SELECT ON SALGRADE
TO PREV_HW;

-- Q3)
REVOKE SELECT ON SALGRADE FROM PREV_HW;

